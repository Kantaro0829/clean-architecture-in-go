from concurrent import futures
import grpc
import chat_pb2
import chat_pb2_grpc
from youtube_transcript_api import YouTubeTranscriptApi
#from googleapiclient.discovery import build
from apiclient.discovery import build
from get_subtitle import GetSubtitle

class HelloWorld(chat_pb2_grpc.ChatServiceServicer):
    
    def SayHello(self, request, context):
        subtittle = ""
        print("RECV: %s" % request.body)
        message = "Hello, %s!" % request.body
        print("SEND: %s" % message)

        #return hello_pb2.HelloReply(message=message)
        print("取得しID: ", request.body)
        gs = GetSubtitle(request.body)

        try:
            subtittle = gs.get_normal_subtitle()
        except:
            subtittle = gs.get_autogenerated_subtitle()
        
        return chat_pb2.Message(body=subtittle)



def serve():
    server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
    #hello_pb2_grpc.add_HelloWorldServicer_to_server(HelloWorld(), server)
    chat_pb2_grpc.add_ChatServiceServicer_to_server(HelloWorld(), server)
    server.add_insecure_port('[::]:5002')
    server.start()
    server.wait_for_termination()

if __name__ == '__main__':
    serve()